# Basic idea gotten from here: https://github.com/hashicorp/terraform-github-actions

name: Infra

on:
  push:
    branches:
      - 'feature/frontend-cd'
    paths:
    - 'challenges/challenge1/terraform/**'
env:
    tf_version: '0.12.26'
    tf_working_dir: 'challenges/challenge1/terraform'
    subscription_id: '16746c1e-ff8d-4f88-a96f-faa5e7903eda'
    prefix: 'masim-az-tf-challenge-2020'
jobs:
  terraform:
    name: 'Provision infra and enable appservice ci'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@master
      - name: 'Terraform Format'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: ${{ env.tf_version }}
          tf_actions_subcommand: 'fmt'
          tf_actions_working_dir: ${{ env.tf_working_dir }}
          tf_actions_comment: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Terraform Init'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: ${{ env.tf_version }}
          tf_actions_subcommand: 'init'
          tf_actions_working_dir: ${{ env.tf_working_dir }}
          tf_actions_comment: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ARM_CLIENT_ID: ${{ secrets.AZ_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZ_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ env.subscription_id }}
          ARM_TENANT_ID: ${{ secrets.AZ_TENANT_ID }}
      - name: 'Terraform Validate'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: ${{ env.tf_version }}
          tf_actions_subcommand: 'validate'
          tf_actions_working_dir: ${{ env.tf_working_dir }}
          tf_actions_comment: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Terraform Plan'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: ${{ env.tf_version }}
          tf_actions_subcommand: 'plan'
          tf_actions_working_dir: ${{ env.tf_working_dir }}
          tf_actions_comment: false
          args: '-var="subscription_id=${{ env.subscription_id }}" -var="prefix=${{ env.prefix }}"'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ARM_CLIENT_ID: ${{ secrets.AZ_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZ_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ env.subscription_id }}
          ARM_TENANT_ID: ${{ secrets.AZ_TENANT_ID }}
      - name: 'Terraform Apply using custom action'
        uses: ./.github/actions/terraform-azcli
        with:
          variables: subscription_id=${{ env.subscription_id }},prefix=${{ env.prefix }}
          path: ${{ env.tf_working_dir }}
        env:
          ARM_CLIENT_ID: ${{ secrets.AZ_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZ_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ env.subscription_id }}
          ARM_TENANT_ID: ${{ secrets.AZ_TENANT_ID }}
      - name: Login azure
        run: |
          az login --service-principal -u '${{ secrets.AZ_CLIENT_ID }}' -p '${{ secrets.AZ_CLIENT_SECRET }}' --tenant '${{ secrets.AZ_TENANT_ID }}'
          az account set -s ${{ env.subscription_id }}
      - name: Execute custom script
        uses: azure/CLI@v1
        with:
          azcliversion: 2.7.0
          inlineScript: |
            cd ${{ env.tf_working_dir }}
            chmod +x ./bin/appservice-ci.sh
            ./bin/appservice-ci.sh ${{ env.prefix }}-resources ${{ env.prefix }}-appservice
      - name: Azure logout
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az logout
